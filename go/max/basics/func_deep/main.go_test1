// package main

// import "fmt"

// type transformFn func(int) int

// func main() {
// 	numbers := []int{1, 2, 3}
// 	moreNumbers := []int{5, 1, 2}

// 	doubled := transformNumbers(&numbers, double)
// 	tripled := transformNumbers(&numbers, triple)

// 	fmt.Println(doubled)
// 	fmt.Println(tripled)

// 	transformFn1 := getTransformerFunction(&numbers)
// 	transformFn2 := getTransformerFunction(&moreNumbers)

// 	transformedNumbers := transformNumbers(&numbers, transformFn1)
// 	moreTransformedNumbers := transformNumbers(&moreNumbers, transformFn2)

// 	fmt.Println(transformedNumbers)
// 	fmt.Println(moreTransformedNumbers)
// }

// func transformNumbers(numbers *[]int, transform transformFn) []int {
// 	dNumbers := []int{}

// 	for _, value := range *numbers {
// 		dNumbers = append(dNumbers, transform(value))
// 	}

// 	return dNumbers
// }

// func double(number int) int {
// 	return number * 2
// }

// func getTransformerFunction(numbers *[]int) transformFn {
// 	// Si queremos acceder a una posicion determinada, antes tenemos que usar la
// 	// de-referencia, no como cuando queremos acceder a propiedades de structs
// 	if (*numbers)[0] == 1 {
// 		return double
// 	}

// 	return triple
// }

// func triple(number int) int {
// 	return number * 3
// }
